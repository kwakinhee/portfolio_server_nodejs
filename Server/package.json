{
  "name": "api-new-server",
  "version": "1.0.0",
  "main": "index.js",
  "license": "MIT",
  "private": true,
  "scripts": {
    "------# start #------": "",
    "start:dev:authServer": "cross-env NODE_ENV=development & node -r source-map-support/register dist/authServer/main.js",
    "start:prod:authServer": "cross-env NODE_ENV=production & node -r source-map-support/register --prof dist/authServer/main.js",
    "start:dev:configServer": "cross-env NODE_ENV=development & node -r source-map-support/register dist/configServer/main.js",
    "start:prod:configServer": "cross-env NODE_ENV=production & node -r source-map-support/register --prof dist/configServer/main.js",
    "start:dev:worldServer": "cross-env NODE_ENV=development & node -r source-map-support/register dist/worldServer/main.js",
    "start:prod:worldServer": "cross-env NODE_ENV=production & node -r source-map-support/register --prof dist/worldServer/main.js",
    "start:dev:worldMgrServer": "cross-env NODE_ENV=development & node -r source-map-support/register dist/worldMgrServer/main.js",
    "start:prod:worldMgrServer": "cross-env NODE_ENV=production & node -r source-map-support/register --prof dist/worldMgrServer/main.js",
    "start:bot": "cross-env NODE_ENV=development & node -r source-map-support/register dist/botClient/main.js",
    "------# start pm2 #------": "",
    "start:dev:pm2:authServer": "cross-env pm2 start ./pm2/authServer.ecosystem.config.js",
    "start:dev:pm2:configServer": "cross-env pm2 start ./pm2/configServer.ecosystem.config.js",
    "start:dev:pm2:worldServer": "cross-env pm2 start ./pm2/worldServer.ecosystem.config.js",
    "start:dev:pm2:worldMgrServer": "cross-env pm2 start ./pm2/worldMgrServer.ecosystem.config.js",
    "start:prod:pm2:authServer": "cross-env pm2 start ./pm2/authServer.ecosystem.config.js --env production",
    "start:prod:pm2:configServer": "cross-env pm2 start ./pm2/configServer.ecosystem.config.js --env production",
    "start:prod:pm2:worldServer": "cross-env pm2 start ./pm2/worldServer.ecosystem.config.js --env production",
    "start:prod:pm2:worldMgrServer": "cross-env pm2 start ./pm2/worldMgrServer.ecosystem.config.js --env production",
    "start:qa:pm2:authServer": "cross-env pm2 start ./pm2/authServer.ecosystem.config.js --env test",
    "start:qa:pm2:configServer": "cross-env pm2 start ./pm2/configServer.ecosystem.config.js --env test",
    "start:qa:pm2:worldServer": "cross-env pm2 start ./pm2/worldServer.ecosystem.config.js --env test",
    "start:qa:pm2:worldMgrServer": "cross-env pm2 start ./pm2/worldMgrServer.ecosystem.config.js --env test",
    "start:dev:pm2": "cross-env pm2 start ./pm2/dev.ecosystem.config.js --env development",
    "start:prod:pm2": "cross-env pm2 start ./pm2/dev.ecosystem.config.js --env production",
    "start:qa:pm2": "cross-env pm2 start ./pm2/dev.ecosystem.config.js --env test",
    "------# common #------": "",
    "build": "tsc -p tsconfig.json",
    "------# dev watch #------": "",
    "watch:authServer": "tsc-watch --onSuccess \"yarn start:dev:authServer\"",
    "watch:configServer": "tsc-watch --onSuccess \"yarn start:dev:configServer\"",
    "watch:worldServer": "tsc-watch --onSuccess \"yarn start:dev:worldServer\"",
    "watch:worldMgrServer": "tsc-watch --onSuccess \"yarn start:dev:worldMgrServer\"",
    "------# protobuf #------": "",
    "preCompile:staticProtoToTs:auth": "pbjs -t static-module ../Packet/proto/authServer.proto | pbts -o src/proto/authServer/jsonProto.d.ts -",
    "postCompile:jsonProtoToJs:auth": "pbjs -t json-module -w commonjs -o dist/proto/authServer/jsonProto.js ../Packet/proto/authServer.proto",
    "preCompile:staticProtoToTs:world": "pbjs -t static-module ../Packet/proto/worldServer.proto | pbts -o src/proto/worldServer/jsonProto.d.ts -",
    "postCompile:jsonProtoToJs:world": "pbjs -t json-module -w commonjs -o dist/proto/worldServer/jsonProto.js ../Packet/proto/worldServer.proto",
    "preCompile:staticProtoToTs:C2WS": "pbjs -t static-module ../Packet/proto/C2WSProtocol.proto | pbts -o src/proto/worldServer/C2WSProtocol.d.ts -",
    "postCompile:jsonProtoToJs:C2WS": "pbjs -t json-module -w commonjs -o dist/proto/worldServer/C2WSProtocol.js ../Packet/proto/C2WSProtocol.proto",
    "preCompile:staticProtoToTs:WS2C": "pbjs -t static-module ../Packet/proto/WS2CProtocol.proto | pbts -o src/proto/worldServer/WS2CProtocol.d.ts -",
    "postCompile:jsonProtoToJs:WS2C": "pbjs -t json-module -w commonjs -o dist/proto/worldServer/WS2CProtocol.js ../Packet/proto/WS2CProtocol.proto",
    "preCompile:staticProtoToTs:C2AS": "pbjs -t static-module ../Packet/proto/C2ASProtocol.proto | pbts -o src/proto/worldServer/C2ASProtocol.d.ts -",
    "postCompile:jsonProtoToJs:C2AS": "pbjs -t json-module -w commonjs -o dist/proto/worldServer/C2ASProtocol.js ../Packet/proto/C2ASProtocol.proto",
    "preCompile:staticProtoToTs:AS2C": "pbjs -t static-module ../Packet/proto/AS2CProtocol.proto | pbts -o src/proto/worldServer/AS2CProtocol.d.ts -",
    "postCompile:jsonProtoToJs:AS2C": "pbjs -t json-module -w commonjs -o dist/proto/worldServer/AS2CProtocol.js ../Packet/proto/AS2CProtocol.proto",
    "compile:all": "npm run preCompile:staticProtoToTs:auth && npm run postCompile:jsonProtoToJs:auth && npm run preCompile:staticProtoToTs:world && npm run postCompile:jsonProtoToJs:world && npm run preCompile:staticProtoToTs:C2WS && npm run postCompile:jsonProtoToJs:C2WS && npm run preCompile:staticProtoToTs:WS2C && npm run postCompile:jsonProtoToJs:WS2C && npm run preCompile:staticProtoToTs:C2AS && npm run postCompile:jsonProtoToJs:C2AS && npm run preCompile:staticProtoToTs:AS2C && npm run postCompile:jsonProtoToJs:AS2C",
    "------# deploy server #------": "",
    "deploy:update:inhee:prod": "node -r source-map-support/register dist/deploy/update.inhee.js inhee.prod.js",
    "deploy:update:inhee:dev": "node -r source-map-support/register dist/deploy/update.inhee.js inhee.dev.js",
    "------# databse #------": "",
    "db-create": "db-migrate --config config/database.create.json --env default db:create",
    "db-drop": "db-migrate --config config/database.create.json --env default db:drop",
    "------# migrate databse #------": "",
    "db-mig-create": "node -r source-map-support/register dist/deploy/dbMigrate/createMigration.js",
    "db-mig-auth-up": "node -r source-map-support/register dist/deploy/dbMigrate/migrateRdb.js --env auth --target table",
    "db-mig-auth-down": "node -r source-map-support/register dist/deploy/dbMigrate/migrateRdb.js --env auth --target table --direction down",
    "db-mig-user-up": "node -r source-map-support/register dist/deploy/dbMigrate/migrateRdb.js --env user --target table",
    "db-mig-user-down": "node -r source-map-support/register dist/deploy/dbMigrate/migrateRdb.js --env user --target table --direction down",
    "db-sp-auth-apply": "node -r source-map-support/register dist/deploy/dbMigrate/migrateRdb.js --env auth --target procedure",
    "db-sp-user-apply": "node -r source-map-support/register dist/deploy/dbMigrate/migrateRdb.js --env user --target procedure",
    "db-mig-all-deploy": "node -r source-map-support/register dist/deploy/dbMigrate/migrateRdb.js"
  },
  "dependencies": {
    "@types/reflect-metadata": "^0.1.0",
    "acorn": "^8.8.2",
    "ajv": "^8.6.3",
    "axios": "^0.21.1",
    "chalk": "^4.1.1",
    "config": "^3.3.6",
    "cors": "^2.8.5",
    "cross-env": "^7.0.3",
    "db-migrate": "^0.11.13",
    "db-migrate-mysql": "^2.2.0",
    "event-dispatch": "^0.4.1",
    "express": "^4.17.1",
    "generic-pool": "^3.9.0",
    "global": "^4.4.0",
    "id128": "^1.6.6",
    "ioredis": "^5.3.2",
    "jsdoc": "^3.6.3",
    "jsonwebtoken": "^8.5.1",
    "lodash": "^4.17.21",
    "media-typer": "^1.1.0",
    "morgan": "^1.10.0",
    "openapi-types": "^12.1.0",
    "pb-util": "^1.0.3",
    "promise-mysql": "^5.2.0",
    "protobufjs": "^7.2.3",
    "protobufjs-cli": "^1.1.1",
    "queue-fifo": "^0.2.6",
    "reflect-metadata": "^0.1.13",
    "remove": "^0.1.5",
    "semver": "^7.3.5",
    "shortid": "^2.2.16",
    "smart-buffer": "^4.1.0",
    "source-map-support": "^0.5.19",
    "stoppable": "^1.1.0",
    "swagger-jsdoc": "^6.2.5",
    "swagger-ui-express": "^4.6.0",
    "typedi": "^0.10.0",
    "uglify-js": "^3.7.7",
    "url": "^0.11.0",
    "url-join": "^4.0.1",
    "winston": "^3.3.3",
    "winston-daily-rotate-file": "^4.5.5"
  },
  "devDependencies": {
    "@types/config": "^0.0.38",
    "@types/express": "^4.17.12",
    "@types/generic-pool": "^3.8.1",
    "@types/google-protobuf": "*",
    "@types/ioredis": "^5.0.0",
    "@types/jest": "^29.5.5",
    "@types/jsonwebtoken": "^8.5.4",
    "@types/lodash": "^4.14.170",
    "@types/morgan": "^1.9.2",
    "@types/node": "^15.12.2",
    "@types/shortid": "^0.0.29",
    "@types/stoppable": "^1.1.1",
    "@types/swagger-jsdoc": "^6.0.1",
    "@types/swagger-ui-express": "^4.1.3",
    "@types/url-join": "^4.0.0",
    "@typescript-eslint/eslint-plugin": "^4.27.0",
    "@typescript-eslint/parser": "^4.27.0",
    "eslint": "^7.28.0",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-prettier": "^3.4.0",
    "jest": "^29.7.0",
    "nodemon": "^2.0.7",
    "prettier": "^2.8.8",
    "typescript": "^5.0.4"
  }
}
